name: Agent Coordination System

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize, closed]
  workflow_dispatch:
    inputs:
      agent_task:
        description: 'Task for agents to handle'
        required: false

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend_changed: ${{ steps.changes.outputs.frontend }}
      backend_changed: ${{ steps.changes.outputs.backend }}
      security_review: ${{ steps.changes.outputs.security }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'app/**'
              - 'components/**'
              - 'public/**'
              - 'package.json'
            backend:
              - 'backend/**'
              - 'api/**'
            security:
              - '**/*.env*'
              - '**/auth/**'
              - '**/security/**'
  
  frontend-agent-tasks:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Log Frontend Changes
        run: |
          echo "## ðŸŽ¨ Frontend Agent Task Required" >> $GITHUB_STEP_SUMMARY
          echo "Changes detected in frontend files" >> $GITHUB_STEP_SUMMARY
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E "(app|components|public)" >> $GITHUB_STEP_SUMMARY
      
      - name: Create Frontend Task Issue
        if: github.event_name == 'push'
        uses: actions/github-script@v6
        with:
          script: |
            const files = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: context.payload.before,
              head: context.sha
            });
            
            const frontendFiles = files.data.files.filter(f => 
              f.filename.includes('app/') || 
              f.filename.includes('components/') ||
              f.filename.includes('public/')
            );
            
            if (frontendFiles.length > 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `[FRONTEND-AGENT] Review changes in ${frontendFiles.length} files`,
                body: `Frontend changes detected:\n${frontendFiles.map(f => `- ${f.filename}`).join('\n')}`,
                labels: ['agent-task', 'frontend']
              });
            }
  
  testing-agent-trigger:
    needs: [detect-changes]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Schedule Test Suite
        run: |
          echo "## ðŸ§ª Testing Agent Triggered" >> $GITHUB_STEP_SUMMARY
          echo "Test suite scheduled for:" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend: ${{ needs.detect-changes.outputs.frontend_changed }}" >> $GITHUB_STEP_SUMMARY
          echo "- Backend: ${{ needs.detect-changes.outputs.backend_changed }}" >> $GITHUB_STEP_SUMMARY
      
      - name: Create Test Report
        run: |
          mkdir -p .agent-reports
          cat > .agent-reports/test-request.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "frontend_tests": ${{ needs.detect-changes.outputs.frontend_changed }},
            "backend_tests": ${{ needs.detect-changes.outputs.backend_changed }},
            "commit": "${{ github.sha }}",
            "branch": "${{ github.ref_name }}"
          }
          EOF
  
  security-review:
    needs: detect-changes
    if: needs.detect-changes.outputs.security_review == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Flag for Security Review
        run: |
          echo "## ðŸ”’ Security Agent Review Required" >> $GITHUB_STEP_SUMMARY
          echo "Security-sensitive files changed" >> $GITHUB_STEP_SUMMARY
      
      - name: Create Security Alert
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '[SECURITY-AGENT] Urgent: Review security-sensitive changes',
              body: 'Security-sensitive files were modified. Immediate review required.',
              labels: ['agent-task', 'security', 'priority-high']
            });

  agent-summary:
    needs: [frontend-agent-tasks, testing-agent-trigger, security-review]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Create Agent Coordination Summary
        run: |
          echo "# ðŸ¤– Agent Coordination Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Agent | Status | Action Required |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|-----------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend | ${{ needs.frontend-agent-tasks.result }} | Review UI changes |" >> $GITHUB_STEP_SUMMARY
          echo "| Backend | Pending | Check backend repo |" >> $GITHUB_STEP_SUMMARY
          echo "| Testing | ${{ needs.testing-agent-trigger.result }} | Run test suite |" >> $GITHUB_STEP_SUMMARY
          echo "| Security | ${{ needs.security-review.result }} | Security scan |" >> $GITHUB_STEP_SUMMARY